module "network-skeleton" {
  source              = "OT-CLOUD-KIT/network-skeleton/aws"
  version             = "1.0.0"
  cidr_block          = var.cidr_block
  name_hz             = var.name_hz
  record_type         = var.record_type
  require_hosted_zone = var.require_hosted_zone
  name = var.name
  instance_tenancy = var.instance_tenancy
  enable_dns_support = var.enable_dns_support
  enable_dns_hostnames = var.enable_dns_hostnames
  enable_classiclink = var.enable_classiclink
  enable_classiclink_dns_support = var.enable_classiclink_dns_support
  tags = var.tags
  vpc_tags = var.vpc_tags
  public_sub_az = var.public_sub_az
  public_sub_az_id = var.public_sub_az_id
  public_subnet_cidr = var.public_subnet_cidr
  map_public_ip_on_launch = var.map_public_ip_on_launch
  nacl_egress_rule_no = var.nacl_egress_rule_no
  nacl_egress_protocol = var.nacl_egress_protocol
  nacl_egress_action = var.nacl_egress_action
  nacl_egress_from_port = var.nacl_egress_from_port
  nacl_egress_to_port = var.nacl_egress_to_port
  nacl_ingress_rule_no = var.nacl_ingress_rule_no
  nacl_ingress_protocol = var.nacl_ingress_protocol
  nacl_ingress_action = var.nacl_ingress_action
  nacl_ingress_from_port = var.nacl_ingress_from_port
  nacl_ingress_to_port = var.nacl_ingress_to_port
  sg_egress_from_port = var.sg_egress_from_port
  sg_egress_to_port = var.sg_egress_to_port
  sg_ingress_from_port = var.sg_ingress_from_port
  sg_ingress_to_port = var.sg_ingress_to_port
  whitelist_ssh_ip = var.whitelist_ssh_ip
  certificate_arn = var.certificate_arn
}
